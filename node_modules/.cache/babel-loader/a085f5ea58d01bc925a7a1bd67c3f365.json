{"ast":null,"code":"var _jsxFileName = \"/Users/renwanjun/Documents/\\u5DE5\\u4F5C/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/components/layout/Menu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, memo } from \"react\";\nimport { Menu } from \"antd\";\nimport menuList, { BreadcrumbNameMap } from \"common/menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\n\n// @withRouter\n// const MenuMap = new Map();\nfunction AdminMenu({\n  location,\n  onSelect\n}) {\n  _s();\n\n  // 初始化\n  let {\n    pathname\n  } = location;\n  const paths = pathname.match(/\\/[^\\/]+/g); // console.log(location);\n\n  let defaultSelectedKey = pathname;\n  let defaultOpenKey = paths[1];\n  console.log(defaultSelectedKey, defaultOpenKey);\n  let menuLength = 0,\n      subMenuLength = 0,\n      list = menuList;\n  const [KeyPaths, setKeyPaths] = useState([defaultSelectedKey, defaultOpenKey]); // 渲染后\n\n  useEffect(() => {\n    onSelect(breadcrunmbPath(KeyPaths));\n  }, []);\n\n  const breadcrunmbPath = keyPath => keyPath.map(key => BreadcrumbNameMap.get(key)).reverse(); // 根据初次跳转的路由设置默认选中的菜单\n\n\n  const menuOnSelect = ({\n    keyPath,\n    selectedKeys\n  }) => {\n    setKeyPaths(keyPath);\n    onSelect(breadcrunmbPath(keyPath));\n  }; // 路由跳转\n\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    defaultSelectedKeys: [defaultSelectedKey],\n    defaultOpenKeys: [defaultOpenKey],\n    mode: \"inline\",\n    theme: \"dark\",\n    onSelect: menuOnSelect,\n    children: list.map((item, index) => {\n      if (item.children && item.children.length >= 0) {\n        ++subMenuLength;\n        return /*#__PURE__*/_jsxDEV(SubMenu, {\n          icon: /*#__PURE__*/_jsxDEV(item.icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this),\n          title: item.name,\n          children: item.children.map((item, index) => {\n            return (\n              /*#__PURE__*/\n              // key={++menuLength}\n              _jsxDEV(Menu.Item, {\n                icon: item.icon,\n                children: item.name\n              }, `${item.key}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            );\n          })\n        }, item.key ? item.key : \"sub\" + subMenuLength, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      } else {\n        ++menuLength;\n        return /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: item.icon,\n          children: item.name\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n} // memo 包裹组件对它的props 进行浅比较；不比较state\n\n\n_s(AdminMenu, \"R6HaGLOjXv3Hozp4631dx0KLLoo=\");\n\n_c = AdminMenu;\nexport default _c2 = /*#__PURE__*/memo(AdminMenu);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminMenu\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/components/layout/Menu.tsx"],"names":["React","useState","useEffect","memo","Menu","menuList","BreadcrumbNameMap","SubMenu","AdminMenu","location","onSelect","pathname","paths","match","defaultSelectedKey","defaultOpenKey","console","log","menuLength","subMenuLength","list","KeyPaths","setKeyPaths","breadcrunmbPath","keyPath","map","key","get","reverse","menuOnSelect","selectedKeys","item","index","children","length","name","icon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, memo } from \"react\";\nimport { Menu } from \"antd\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport {\n  AppstoreOutlined,\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PieChartOutlined,\n  DesktopOutlined,\n  ContainerOutlined,\n  MailOutlined,\n} from \"@ant-design/icons\";\nimport menuList, { MenuItem, BreadcrumbNameMap } from \"common/menu\";\n\nconst { SubMenu } = Menu;\n\ndeclare interface MenuListProps {\n  readonly list: MenuItem[];\n  menuLength?: number;\n  subMenuLength?: number;\n}\n\n// @withRouter\n\n// const MenuMap = new Map();\n\nfunction AdminMenu({ location, onSelect }: any) {\n  // 初始化\n  let { pathname } = location;\n  const paths = pathname.match(/\\/[^\\/]+/g);\n  // console.log(location);\n  let defaultSelectedKey: string = pathname;\n  let defaultOpenKey: string = paths[1];\n\n  console.log(defaultSelectedKey, defaultOpenKey);\n\n  let menuLength = 0,\n    subMenuLength = 0,\n    list = menuList;\n\n  const [KeyPaths, setKeyPaths] = useState([\n    defaultSelectedKey,\n    defaultOpenKey,\n  ]);\n  // 渲染后\n  useEffect(() => {\n    onSelect(breadcrunmbPath(KeyPaths));\n  }, []);\n  const breadcrunmbPath = (keyPath: string[]) =>\n    keyPath.map((key: string) => BreadcrumbNameMap.get(key)).reverse();\n\n  // 根据初次跳转的路由设置默认选中的菜单\n  const menuOnSelect = ({ keyPath, selectedKeys }: any) => {\n    setKeyPaths(keyPath);\n    onSelect(breadcrunmbPath(keyPath));\n  };\n  // 路由跳转\n  return (\n    <Menu\n      defaultSelectedKeys={[defaultSelectedKey]}\n      defaultOpenKeys={[defaultOpenKey]}\n      mode=\"inline\"\n      theme=\"dark\"\n      onSelect={menuOnSelect}\n    >\n      {list.map((item: MenuItem, index: number) => {\n        if (item.children && item.children.length >= 0) {\n          ++subMenuLength;\n          return (\n            <SubMenu\n              key={item.key ? item.key : \"sub\" + subMenuLength}\n              icon={<item.icon />}\n              title={item.name}\n            >\n              {item.children.map((item, index) => {\n                return (\n                  // key={++menuLength}\n                  <Menu.Item key={`${item.key}`} icon={item.icon}>\n                    {item.name}\n                    {/* {item.path ? (\n                      <Link to={item.path?.toString()}>{item.name}</Link>\n                    ) : (\n                      item.name\n                    )} */}\n                  </Menu.Item>\n                );\n              })}\n            </SubMenu>\n          );\n        } else {\n          ++menuLength;\n          return (\n            <Menu.Item key={item.key} icon={item.icon}>\n              {item.name}\n              {/* {item.path ? (\n                <Link to={item.path?.toString()}>{item.name}</Link>\n              ) : (\n                item.name\n              )} */}\n            </Menu.Item>\n          );\n        }\n      })}\n    </Menu>\n  );\n}\n\n// memo 包裹组件对它的props 进行浅比较；不比较state\nexport default memo(AdminMenu);\n"]},"metadata":{},"sourceType":"module"}