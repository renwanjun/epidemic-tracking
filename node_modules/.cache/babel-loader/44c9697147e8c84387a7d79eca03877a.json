{"ast":null,"code":"import axios from \"axios\";\nimport \"@/mock\";\nimport { BASE_URL, TIMEOUT } from \"@/config/axios\"; // 设置全局baseUrl以及默认配置\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIMEOUT\n}); // 添加请求拦截\n\ninstance.interceptors.request.use(config => {\n  // console.log(\"请求被拦截\");\n  // console.log(config);\n  config.headers.Authotization = localStorage.getItem(\"token\"); // options.headers={\n  //   ...loadOptions.headers,\n  //   Authotization:localStorage.getItem('token')\n  // }\n\n  return config;\n}, error => {\n  throw new Error(error);\n}); // 添加响应拦截\n\ninstance.interceptors.response.use(res => {\n  console.log(res);\n  return res.data;\n}, error => {\n  return error;\n});\nexport default instance;","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/utils/request.ts"],"names":["axios","BASE_URL","TIMEOUT","instance","create","baseURL","timeout","interceptors","request","use","config","headers","Authotization","localStorage","getItem","error","Error","response","res","console","log","data"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,OAAO,QAAP;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,gBAAlC,C,CACA;;AACA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEJ,QADmB;AAE5BK,EAAAA,OAAO,EAAEJ;AAFmB,CAAb,CAAjB,C,CAKA;;AACAC,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACGC,MAAD,IAAgC;AAC9B;AACA;AACAA,EAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA/B,CAH8B,CAI9B;AACA;AACA;AACA;;AACA,SAAOJ,MAAP;AACD,CAVH,EAWEK,KAAK,IAAI;AACP,QAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD,CAbH,E,CAgBA;;AACAZ,QAAQ,CAACI,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CACES,GAAG,IAAI;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SAAOA,GAAG,CAACG,IAAX;AACD,CAJH,EAKEN,KAAK,IAAI;AACP,SAAOA,KAAP;AACD,CAPH;AAUA,eAAeZ,QAAf","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport \"@/mock\";\nimport { BASE_URL, TIMEOUT } from \"@/config/axios\";\n// 设置全局baseUrl以及默认配置\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIMEOUT,\n});\n\n// 添加请求拦截\ninstance.interceptors.request.use(\n  (config: AxiosRequestConfig) => {\n    // console.log(\"请求被拦截\");\n    // console.log(config);\n    config.headers.Authotization = localStorage.getItem(\"token\");\n    // options.headers={\n    //   ...loadOptions.headers,\n    //   Authotization:localStorage.getItem('token')\n    // }\n    return config;\n  },\n  error => {\n    throw new Error(error);\n  }\n);\n\n// 添加响应拦截\ninstance.interceptors.response.use(\n  res => {\n    console.log(res);\n    return res.data;\n  },\n  error => {\n    return error;\n  }\n);\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}