{"ast":null,"code":"var _jsxFileName = \"/Users/renwanjun/Documents/\\u5DE5\\u4F5C/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/components/map/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport * as echarts from \"echarts/core\";\nimport { TitleComponent, ToolboxComponent, TooltipComponent, VisualMapComponent, GeoComponent, GridComponent } from \"echarts/components\";\nimport { MapChart } from \"echarts/charts\";\nimport { CanvasRenderer } from \"echarts/renderers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\necharts.use([TitleComponent, ToolboxComponent, TooltipComponent, VisualMapComponent, GeoComponent, MapChart, CanvasRenderer, GridComponent]);\nvar ROOT_PATH = \"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples\";\n\nfunction getMapData(url) {\n  return fetch(url).then(response => response.json());\n}\n\nfunction setChartOptions(myChart, option) {\n  return function (geoJson) {\n    // console.log(geoJson);\n    myChart.hideLoading();\n    echarts.registerMap(\"HK\", geoJson);\n    myChart.setOption(option = {\n      title: {\n        text: \"香港18区人口密度 （2011）\",\n        subtext: \"人口密度数据来自Wikipedia\",\n        sublink: \"http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12\"\n      },\n      grid: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: \"{b}<br/>{c} (p / km2)\"\n      },\n      toolbox: {\n        show: true,\n        orient: \"vertical\",\n        left: \"right\",\n        top: \"center\",\n        feature: {\n          dataView: {\n            readOnly: false\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      visualMap: {\n        min: 800,\n        max: 50000,\n        text: [\"High\", \"Low\"],\n        realtime: false,\n        calculable: true,\n        inRange: {\n          color: [\"lightskyblue\", \"yellow\", \"orangered\"]\n        }\n      },\n      series: [{\n        name: \"香港18区人口密度\",\n        type: \"map\",\n        mapType: \"HK\",\n        // 自定义扩展图表类型\n        label: {\n          show: true\n        },\n        data: [{\n          name: \"中西区\",\n          value: 20057.34\n        }, {\n          name: \"湾仔\",\n          value: 15477.48\n        }, {\n          name: \"东区\",\n          value: 31686.1\n        }, {\n          name: \"南区\",\n          value: 6992.6\n        }, {\n          name: \"油尖旺\",\n          value: 44045.49\n        }, {\n          name: \"深水埗\",\n          value: 40689.64\n        }, {\n          name: \"九龙城\",\n          value: 37659.78\n        }, {\n          name: \"黄大仙\",\n          value: 45180.97\n        }, {\n          name: \"观塘\",\n          value: 55204.26\n        }, {\n          name: \"葵青\",\n          value: 21900.9\n        }, {\n          name: \"荃湾\",\n          value: 4918.26\n        }, {\n          name: \"屯门\",\n          value: 5881.84\n        }, {\n          name: \"元朗\",\n          value: 4178.01\n        }, {\n          name: \"北区\",\n          value: 2227.92\n        }, {\n          name: \"大埔\",\n          value: 2180.98\n        }, {\n          name: \"沙田\",\n          value: 9172.94\n        }, {\n          name: \"西贡\",\n          value: 3368\n        }, {\n          name: \"离岛\",\n          value: 806.98\n        }],\n        // 自定义名称映射\n        nameMap: {\n          \"Central and Western\": \"中西区\",\n          Eastern: \"东区\",\n          Islands: \"离岛\",\n          \"Kowloon City\": \"九龙城\",\n          \"Kwai Tsing\": \"葵青\",\n          \"Kwun Tong\": \"观塘\",\n          North: \"北区\",\n          \"Sai Kung\": \"西贡\",\n          \"Sha Tin\": \"沙田\",\n          \"Sham Shui Po\": \"深水埗\",\n          Southern: \"南区\",\n          \"Tai Po\": \"大埔\",\n          \"Tsuen Wan\": \"荃湾\",\n          \"Tuen Mun\": \"屯门\",\n          \"Wan Chai\": \"湾仔\",\n          \"Wong Tai Sin\": \"黄大仙\",\n          \"Yau Tsim Mong\": \"油尖旺\",\n          \"Yuen Long\": \"元朗\"\n        }\n      }]\n    });\n  };\n}\n\nexport default function Map() {\n  _s();\n\n  var chartRef = useRef(null);\n  useEffect(() => {\n    var chartDom = chartRef;\n    var myChart = echarts.init(chartDom);\n    var option; //\n\n    myChart.showLoading();\n    getMapData(`${ROOT_PATH}/data/asset/geo/HK.json`).then(setChartOptions(myChart, option)).then(() => {// option && myChart.setOption(option);\n    }).catch(err => {\n      console.log(err);\n    }); // return () => {\n    //     cleanup\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    ref: thisDiv => chartRef = thisDiv,\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"400px\",\n      overflowX: \"auto\"\n    },\n    children: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"l8VvIpZM05Ofagc1NqaxoFG9V1A=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/components/map/index.tsx"],"names":["React","useEffect","useRef","echarts","TitleComponent","ToolboxComponent","TooltipComponent","VisualMapComponent","GeoComponent","GridComponent","MapChart","CanvasRenderer","use","ROOT_PATH","getMapData","url","fetch","then","response","json","setChartOptions","myChart","option","geoJson","hideLoading","registerMap","setOption","title","text","subtext","sublink","grid","left","right","top","bottom","tooltip","trigger","formatter","toolbox","show","orient","feature","dataView","readOnly","restore","saveAsImage","visualMap","min","max","realtime","calculable","inRange","color","series","name","type","mapType","label","data","value","nameMap","Eastern","Islands","North","Southern","Map","chartRef","chartDom","init","showLoading","catch","err","console","log","thisDiv","position","width","height","overflowX"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport * as echarts from \"echarts/core\";\nimport {\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  GeoComponent,\n  GridComponent,\n} from \"echarts/components\";\nimport { MapChart } from \"echarts/charts\";\nimport { CanvasRenderer } from \"echarts/renderers\";\n\necharts.use([\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  VisualMapComponent,\n  GeoComponent,\n  MapChart,\n  CanvasRenderer,\n  GridComponent,\n]);\n\nvar ROOT_PATH =\n  \"https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples\";\n\nfunction getMapData(url: string) {\n  return fetch(url).then(response => response.json());\n}\n\nfunction setChartOptions(myChart: any, option: any) {\n  return function (geoJson: any) {\n    // console.log(geoJson);\n    myChart.hideLoading();\n\n    echarts.registerMap(\"HK\", geoJson);\n\n    myChart.setOption(\n      (option = {\n        title: {\n          text: \"香港18区人口密度 （2011）\",\n          subtext: \"人口密度数据来自Wikipedia\",\n          sublink:\n            \"http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12\",\n        },\n        grid: {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter: \"{b}<br/>{c} (p / km2)\",\n        },\n        toolbox: {\n          show: true,\n          orient: \"vertical\",\n          left: \"right\",\n          top: \"center\",\n          feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {},\n          },\n        },\n        visualMap: {\n          min: 800,\n          max: 50000,\n          text: [\"High\", \"Low\"],\n          realtime: false,\n          calculable: true,\n          inRange: {\n            color: [\"lightskyblue\", \"yellow\", \"orangered\"],\n          },\n        },\n        series: [\n          {\n            name: \"香港18区人口密度\",\n            type: \"map\",\n            mapType: \"HK\", // 自定义扩展图表类型\n            label: {\n              show: true,\n            },\n            data: [\n              { name: \"中西区\", value: 20057.34 },\n              { name: \"湾仔\", value: 15477.48 },\n              { name: \"东区\", value: 31686.1 },\n              { name: \"南区\", value: 6992.6 },\n              { name: \"油尖旺\", value: 44045.49 },\n              { name: \"深水埗\", value: 40689.64 },\n              { name: \"九龙城\", value: 37659.78 },\n              { name: \"黄大仙\", value: 45180.97 },\n              { name: \"观塘\", value: 55204.26 },\n              { name: \"葵青\", value: 21900.9 },\n              { name: \"荃湾\", value: 4918.26 },\n              { name: \"屯门\", value: 5881.84 },\n              { name: \"元朗\", value: 4178.01 },\n              { name: \"北区\", value: 2227.92 },\n              { name: \"大埔\", value: 2180.98 },\n              { name: \"沙田\", value: 9172.94 },\n              { name: \"西贡\", value: 3368 },\n              { name: \"离岛\", value: 806.98 },\n            ],\n            // 自定义名称映射\n            nameMap: {\n              \"Central and Western\": \"中西区\",\n              Eastern: \"东区\",\n              Islands: \"离岛\",\n              \"Kowloon City\": \"九龙城\",\n              \"Kwai Tsing\": \"葵青\",\n              \"Kwun Tong\": \"观塘\",\n              North: \"北区\",\n              \"Sai Kung\": \"西贡\",\n              \"Sha Tin\": \"沙田\",\n              \"Sham Shui Po\": \"深水埗\",\n              Southern: \"南区\",\n              \"Tai Po\": \"大埔\",\n              \"Tsuen Wan\": \"荃湾\",\n              \"Tuen Mun\": \"屯门\",\n              \"Wan Chai\": \"湾仔\",\n              \"Wong Tai Sin\": \"黄大仙\",\n              \"Yau Tsim Mong\": \"油尖旺\",\n              \"Yuen Long\": \"元朗\",\n            },\n          },\n        ],\n      })\n    );\n  };\n}\n\nexport default function Map() {\n  var chartRef: any = useRef(null);\n  useEffect(() => {\n    var chartDom = chartRef;\n    var myChart = echarts.init(chartDom);\n    var option: any;\n    //\n    myChart.showLoading();\n\n    getMapData(`${ROOT_PATH}/data/asset/geo/HK.json`)\n      .then(setChartOptions(myChart, option))\n      .then(() => {\n        // option && myChart.setOption(option);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n    // return () => {\n    //     cleanup\n    // }\n  }, []);\n  return (\n    <div\n      id=\"map\"\n      ref={thisDiv => (chartRef = thisDiv!)}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: \"400px\",\n        overflowX: \"auto\",\n      }}\n    >\n      map\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}