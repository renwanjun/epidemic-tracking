{"ast":null,"code":"var _jsxFileName = \"/Users/renwanjun/Documents/\\u5DE5\\u4F5C/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/utils/render-routes.tsx\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport { selectIsLogin as isLogin } from \"@/reducers/login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst beforeEach = function () {}; // 高阶组件 可以添加路由守卫\n\n\nconst connect = function (route) {\n  return function (WrappedComponent) {\n    var _temp;\n\n    return _temp = class extends React.Component {\n      constructor(props) {\n        super(props);\n\n        this.beforeEach = (to, from) => {// if (to?.meta?.requireAuth && !auth.isLoggedIn()) {\n          // }\n        };\n\n        this.state = {};\n      }\n\n      componentDidMount() {\n        console.log(\"mount\");\n      }\n\n      render() {\n        const token = localStorage.getItem(\"token\"); // 执行守卫\n\n        beforeEach();\n\n        if (token) {\n          return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n            route: route,\n            ...this.props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 18\n          }, this);\n        } else {} // debugger;\n\n      }\n\n    }, _temp;\n  };\n};\n\nfunction useBeforeEach(config) {\n  var _config$meta;\n\n  const {\n    requireAuth\n  } = config === null || config === void 0 ? void 0 : (_config$meta = config.meta) === null || _config$meta === void 0 ? void 0 : _config$meta.requireAuth;\n\n  if (requireAuth && !isLogin) {\n    history.go(\"/login\");\n  }\n}\n\nconst hocConnect = route => {\n  return function (WrappedComponent) {\n    var _s = $RefreshSig$();\n\n    const HocComponent = ({ ...props\n    }) => {\n      _s();\n\n      useBeforeEach(route);\n      console.log(route);\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        route: route,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this);\n    };\n\n    _s(HocComponent, \"0TOgErtM2VX6NAE+vyCxmnchFP8=\", false, function () {\n      return [useBeforeEach];\n    });\n\n    HocComponent.propTypes = {};\n    return HocComponent;\n  };\n};\n\nfunction RenderRoutes(props) {\n  // console.log(props);\n  const routes = props === null || props === void 0 ? void 0 : props.routes;\n  const location = props === null || props === void 0 ? void 0 : props.location; // useEffect(() => {\n  //   console.log(routes);\n  //   return () => {\n  //     // cleanup\n  //   };\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: routes === null || routes === void 0 ? void 0 : routes.map((route, index) => {\n      var _route$path;\n\n      return !(route === null || route === void 0 ? void 0 : route.redirect) ? /*#__PURE__*/_jsxDEV(Route, {\n        path: `${route.path}`,\n        exact: route === null || route === void 0 ? void 0 : route.exact,\n        component: route.component ? hocConnect(route)(route === null || route === void 0 ? void 0 : route.component) : undefined // route.component ? route?.component : undefined\n        ,\n        render: route === null || route === void 0 ? void 0 : route.render\n      }, (_route$path = route.path) === null || _route$path === void 0 ? void 0 : _route$path.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        from: route === null || route === void 0 ? void 0 : route.from,\n        to: (route === null || route === void 0 ? void 0 : route.to) || \"\"\n      }, \"r\" + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RenderRoutes;\n\nfunction isEqual(prevProps, nextProps) {\n  /*\n  如果把 nextProps 传入 render 方法的返回结果与\n  将 prevProps 传入 render 方法的返回结果一致则返回 true，\n  否则返回 false\n  */\n  return Object.is(prevProps.routes, nextProps.routes);\n} // export default React.memo(RenderRoutes, isEqual);\n\n\nexport default _c2 = /*#__PURE__*/React.memo(RenderRoutes);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderRoutes\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/utils/render-routes.tsx"],"names":["React","Switch","Route","Redirect","selectIsLogin","isLogin","beforeEach","connect","route","WrappedComponent","Component","constructor","props","to","from","state","componentDidMount","console","log","render","token","localStorage","getItem","useBeforeEach","config","requireAuth","meta","history","go","hocConnect","HocComponent","propTypes","RenderRoutes","routes","location","map","index","redirect","path","exact","component","undefined","toString","isEqual","prevProps","nextProps","Object","is","memo"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport { selectIsLogin as isLogin } from \"@/reducers/login\";\ninterface RedirectConfig {\n  redirect: boolean;\n  from?: string;\n  to: string;\n}\ninterface Meta {\n  requireAuth?: boolean;\n}\ninterface RouteConfig {\n  key?: string;\n  path: string;\n  exact?: boolean;\n  component?: any;\n  render?: any;\n  routes: IRoute[];\n  meta?: any;\n}\n\ntype IRoute = RouteConfig | RedirectConfig;\ntype Props = Array<IRoute>;\n\nconst beforeEach = function () {};\n\n// 高阶组件 可以添加路由守卫\nconst connect = function (route: RouteConfig) {\n  return function (WrappedComponent: any) {\n    return class extends React.Component {\n      constructor(props: any) {\n        super(props);\n        this.state = {};\n      }\n      beforeEach = (to: RouteConfig, from: RouteConfig) => {\n        // if (to?.meta?.requireAuth && !auth.isLoggedIn()) {\n        // }\n      };\n      componentDidMount() {\n        console.log(\"mount\");\n      }\n      render() {\n        const token = localStorage.getItem(\"token\");\n        // 执行守卫\n        beforeEach();\n        if (token) {\n          return <WrappedComponent route={route} {...this.props} />;\n        } else {\n        }\n        // debugger;\n      }\n    };\n  };\n};\n\nfunction useBeforeEach(config: any) {\n  const { requireAuth } = config?.meta?.requireAuth;\n  if (requireAuth && !isLogin) {\n    history.go(\"/login\");\n  }\n}\nconst hocConnect = (route: any) => {\n  return function (WrappedComponent: any) {\n    const HocComponent = ({ ...props }) => {\n      useBeforeEach(route);\n      console.log(route);\n      return <WrappedComponent route={route} {...props} />;\n    };\n    HocComponent.propTypes = {};\n    return HocComponent;\n  };\n};\n\nfunction RenderRoutes(props: any) {\n  // console.log(props);\n  const routes = props?.routes;\n  const location = props?.location;\n  // useEffect(() => {\n  //   console.log(routes);\n  //   return () => {\n  //     // cleanup\n  //   };\n  // }, []);\n  return (\n    <Switch>\n      {/* <RoutesComponent routes={routes} /> */}\n      {routes?.map((route: any, index: number) =>\n        !route?.redirect ? (\n          <Route\n            key={route.path?.toString()}\n            path={`${route.path}`}\n            exact={route?.exact}\n            component={\n              route.component ? hocConnect(route)(route?.component) : undefined\n              // route.component ? route?.component : undefined\n            }\n            render={route?.render}\n          />\n        ) : (\n          <Redirect key={\"r\" + index} from={route?.from} to={route?.to || \"\"} />\n        )\n      )}\n    </Switch>\n  );\n}\n\nfunction isEqual(prevProps: any, nextProps: any): boolean {\n  /*\n  如果把 nextProps 传入 render 方法的返回结果与\n  将 prevProps 传入 render 方法的返回结果一致则返回 true，\n  否则返回 false\n  */\n  return Object.is(prevProps.routes, nextProps.routes);\n}\n// export default React.memo(RenderRoutes, isEqual);\nexport default React.memo(RenderRoutes);\n"]},"metadata":{},"sourceType":"module"}