{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // Define a type for the slice state\n\n// Define the initial state using that type\n// const initialState: CounterState = {\n//   value: 0,\n// };\nconst initialState = 0;\nexport const increment = (state, action) => state + 1;\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment,\n    decrement: (state, action) => {\n      state -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state += action.payload;\n    }\n  }\n});\nexport const {\n  decrement,\n  incrementByAmount\n} = counterSlice.actions; // export increment\n\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/reducers/counter.ts"],"names":["createSlice","initialState","increment","state","action","counterSlice","name","reducers","decrement","incrementByAmount","payload","actions","reducer"],"mappings":"AAAA,SAAsBA,WAAtB,QAAwD,kBAAxD,C,CAEA;;AAIA;AACA;AACA;AACA;AACA,MAAMC,YAAmB,GAAG,CAA5B;AAGA,OAAO,MAAMC,SAAmD,GAAG,CACjEC,KADiE,EAEjEC,MAFiE,KAG9DD,KAAK,GAAG,CAHN;AAIP,OAAO,MAAME,YAAY,GAAGL,WAAW,CAAC;AACtCM,EAAAA,IAAI,EAAE,SADgC;AAEtCL,EAAAA,YAFsC;AAGtCM,EAAAA,QAAQ,EAAE;AACRL,IAAAA,SADQ;AAERM,IAAAA,SAAS,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAoB;AAC7BD,MAAAA,KAAK,IAAI,CAAT;AACD,KAJO;AAKR;AACAM,IAAAA,iBAAiB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAA0C;AAC3DD,MAAAA,KAAK,IAAIC,MAAM,CAACM,OAAhB;AACD;AARO;AAH4B,CAAD,CAAhC;AAeP,OAAO,MAAM;AAAEF,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAAmCJ,YAAY,CAACM,OAAtD,C,CACP;;AACA,eAAeN,YAAY,CAACO,OAA5B","sourcesContent":["import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n// Define a type for the slice state\ndeclare interface CounterState {\n  value: number;\n}\n// Define the initial state using that type\n// const initialState: CounterState = {\n//   value: 0,\n// };\nconst initialState: State = 0;\n\ntype State = number;\nexport const increment: CaseReducer<State, PayloadAction<State>> = (\n  state,\n  action\n) => state + 1;\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment,\n    decrement: (state, action?) => {\n      state -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state += action.payload;\n    },\n  },\n});\n\nexport const { decrement, incrementByAmount } = counterSlice.actions;\n// export increment\nexport default counterSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}