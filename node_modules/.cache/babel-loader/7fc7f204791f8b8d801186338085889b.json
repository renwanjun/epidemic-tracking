{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { login as loginService } from \"@/services/login\"; // declare interface UsersState {\n//   name: string;\n//   token: number;\n// }\n\nconst initialState = {\n  username: \"\",\n  password: \"\"\n};\nexport const login = createAsyncThunk(\"\", async state => {\n  console.log(state);\n  const response = await loginService({\n    username: \"\",\n    password: \"\"\n  });\n  return response;\n});\nconst usersSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    overrideStateProps(state, {\n      payload\n    }) {\n      return { ...state,\n        ...payload\n      };\n    } // getUser: state => {\n    //   state.username = \"admin\";\n    // },\n    // login: (\n    //   state,\n    //   action: PayloadAction<{ name: string; password: string }>\n    // ) => {\n    //   // state.token = \"sdadsadasdasdsa\";\n    //   localStorage.setItem(\"token\", \"\");\n    // },\n    // register: () => {},\n\n\n  }\n}); // export const { login, register } = usersSlice.actions;\n\nexport const {\n  overrideStateProps\n} = usersSlice.actions;\nexport default usersSlice.reducer;","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/reducers/login.ts"],"names":["createSlice","createAsyncThunk","login","loginService","initialState","username","password","state","console","log","response","usersSlice","name","reducers","overrideStateProps","payload","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAqCC,gBAArC,QAA6D,kBAA7D;AACA,SACEC,KAAK,IAAIC,YADX,QAGO,kBAHP,C,CAKA;AACA;AACA;AACA;;AAIA,MAAMC,YAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,EADe;AAEzBC,EAAAA,QAAQ,EAAE;AAFe,CAA3B;AAKA,OAAO,MAAMJ,KAAK,GAAGD,gBAAgB,CAAC,EAAD,EAAK,MAAMM,KAAN,IAAe;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,QAAQ,GAAG,MAAMP,YAAY,CAAC;AAAEE,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAD,CAAnC;AACA,SAAOI,QAAP;AACD,CAJoC,CAA9B;AAMP,MAAMC,UAAU,GAAGX,WAAW,CAAC;AAC7BY,EAAAA,IAAI,EAAE,OADuB;AAE7BR,EAAAA,YAF6B;AAG7BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,CAACP,KAAD,EAAQ;AAAEQ,MAAAA;AAAF,KAAR,EAA0C;AAC1D,aAAO,EACL,GAAGR,KADE;AAEL,WAAGQ;AAFE,OAAP;AAID,KANO,CAOR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjBQ;AAHmB,CAAD,CAA9B,C,CAwBA;;AACA,OAAO,MAAM;AAAED,EAAAA;AAAF,IAAyBH,UAAU,CAACK,OAA1C;AACP,eAAeL,UAAU,CAACM,OAA1B","sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport {\n  login as loginService,\n  register as registerService,\n} from \"@/services/login\";\n\n// declare interface UsersState {\n//   name: string;\n//   token: number;\n// }\n\nimport { User } from \"@/interfaces/login\";\n\nconst initialState: User = {\n  username: \"\",\n  password: \"\",\n};\n\nexport const login = createAsyncThunk(\"\", async state => {\n  console.log(state);\n  const response = await loginService({ username: \"\", password: \"\" });\n  return response;\n});\n\nconst usersSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    overrideStateProps(state, { payload }: PayloadAction<User>) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n    // getUser: state => {\n    //   state.username = \"admin\";\n    // },\n    // login: (\n    //   state,\n    //   action: PayloadAction<{ name: string; password: string }>\n    // ) => {\n    //   // state.token = \"sdadsadasdasdsa\";\n    //   localStorage.setItem(\"token\", \"\");\n    // },\n    // register: () => {},\n  },\n});\n\n// export const { login, register } = usersSlice.actions;\nexport const { overrideStateProps } = usersSlice.actions;\nexport default usersSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}