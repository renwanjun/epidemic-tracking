{"ast":null,"code":"var _jsxFileName = \"/Users/renwanjun/Documents/\\u5DE5\\u4F5C/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/pages/Login.tsx\",\n    _s = $RefreshSig$();\n\n// import { useSelector, useDispatch, connect } from \"react-redux\";\n// import { AppDispatch, RootState } from \"@/store\"; // 用下面的替换\nimport { Form, Input, Checkbox, Button, Row, Col } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { useAppSelector, useAppDispatch } from \"@/hook\";\nimport { increment, decrement } from \"@/reducers/counter\"; // interface RootState {\n//   counter: number;\n//   login: User;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapState = state => ({\n  counter: state.counter,\n  login: state.login\n}); // const mapDispatch = {\n//   increment: () => {\n//     console.log(\"ss\");\n//     return { type: \"increment\" };\n//   },\n//   update: (payload: any) => {\n//     console.log(payload);\n//     return { type: \"overrideStateProps\", payload };\n//   },\n// };\n\n\nconst mapDispatch = dispatch => ({\n  increment: () => {\n    dispatch(increment());\n  },\n  decrement: () => {\n    dispatch(decrement());\n  },\n  incrementByAmount: num => {// dispatch(incrementByAmount(num));\n  },\n  update: payload => {\n    console.log(payload);\n    dispatch({\n      type: \"overrideStateProps\",\n      payload\n    });\n  }\n});\n\nconst connector = connect(mapState, mapDispatch); // The inferred type will look like:\n// {isOn: boolean, toggleOn: () => void}\n\nfunction Login(props) {\n  _s();\n\n  console.log(props);\n  const count = useAppSelector(state => state.counter);\n  console.log(props.counter);\n  const dispatch = useAppDispatch();\n\n  function login() {// history.push(\"/\");\n  }\n\n  const onFinish = values => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        offset: 6,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 3\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Username\",\n            rules: [{\n              required: true,\n              message: \"Please input your username!\"\n            }],\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => props.update({\n                username: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), props.login.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            rules: [{\n              required: true,\n              message: \"Please input your password!\"\n            }],\n            children: [/*#__PURE__*/_jsxDEV(Input.Password, {\n              onChange: e => props.update({\n                password: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), props.login.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"remember\",\n            valuePropName: \"checked\",\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"\\u767B\\u9646\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), props.counter.value, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.incrementByAmount(5),\n        children: \"+5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"69pYTulermizp4n+q9BDtJH+xs8=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = Login;\nexport default _c2 = connector(Login); // export default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/renwanjun/Documents/工作/WebProjects/BasicKnowledge/React & Vue/demoes/react-antd-ts/src/pages/Login.tsx"],"names":["Form","Input","Checkbox","Button","Row","Col","connect","useAppSelector","useAppDispatch","increment","decrement","mapState","state","counter","login","mapDispatch","dispatch","incrementByAmount","num","update","payload","console","log","type","connector","Login","props","count","onFinish","values","onFinishFailed","errorInfo","display","flexFlow","justifyContent","span","remember","required","message","e","username","target","value","password","offset"],"mappings":"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","sourcesContent":["// import { useSelector, useDispatch, connect } from \"react-redux\";\n// import { AppDispatch, RootState } from \"@/store\"; // 用下面的替换\nimport { Form, Input, Checkbox, Button, Row, Col } from \"antd\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useAppSelector, useAppDispatch } from \"@/hook\";\nimport { RouteConfig } from \"react-router-config\";\nimport { User } from \"@/interfaces/login\";\nimport { increment, decrement, incrementByAmount } from \"@/reducers/counter\";\n\n// interface RootState {\n//   counter: number;\n//   login: User;\n// }\n\nconst mapState = (state: any) => ({\n  counter: state.counter,\n  login: state.login,\n});\n\n// const mapDispatch = {\n//   increment: () => {\n//     console.log(\"ss\");\n//     return { type: \"increment\" };\n//   },\n//   update: (payload: any) => {\n//     console.log(payload);\n//     return { type: \"overrideStateProps\", payload };\n//   },\n// };\nconst mapDispatch = (dispatch: any) => ({\n  increment: () => {\n    dispatch(increment());\n  },\n  decrement: () => {\n    dispatch(decrement());\n  },\n  incrementByAmount: (num: number) => {\n    // dispatch(incrementByAmount(num));\n  },\n  update: (payload: any) => {\n    console.log(payload);\n    dispatch({ type: \"overrideStateProps\", payload });\n  },\n});\n\nconst connector = connect(mapState, mapDispatch);\n// The inferred type will look like:\n// {isOn: boolean, toggleOn: () => void}\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\ntype Props = PropsFromRedux & RouteConfig;\nfunction Login(props: Props) {\n  console.log(props);\n  const count = useAppSelector(state => state.counter);\n  console.log(props.counter);\n  const dispatch = useAppDispatch();\n\n  function login() {\n    // history.push(\"/\");\n  }\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexFlow: \"column nowrap\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Row>\n        <Col span={12} offset={6}>\n          <Form\n            name=\"basic\"\n            labelCol={{ span: 3 }}\n            wrapperCol={{ span: 16 }}\n            initialValues={{ remember: true }}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n          >\n            <Form.Item\n              label=\"Username\"\n              rules={[\n                { required: true, message: \"Please input your username!\" },\n              ]}\n            >\n              <Input\n                onChange={e => props.update({ username: e.target.value })}\n              />\n              {props.login.username}\n            </Form.Item>\n\n            <Form.Item\n              label=\"Password\"\n              rules={[\n                { required: true, message: \"Please input your password!\" },\n              ]}\n            >\n              <Input.Password\n                onChange={e => props.update({ password: e.target.value })}\n              />\n              {props.login.password}\n            </Form.Item>\n\n            <Form.Item\n              name=\"remember\"\n              valuePropName=\"checked\"\n              wrapperCol={{ offset: 8, span: 16 }}\n            >\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n      <Row>\n        <input type=\"text\" />\n        <input type=\"text\" />\n        <button onClick={login}>登陆</button>\n\n        {/* <button onClick={() => dispatch(increment())}>+</button> */}\n        <button onClick={props.increment}>+</button>\n        {props.counter.value}\n        <button onClick={props.decrement}>-</button>\n        <button onClick={() => props.incrementByAmount(5)}>+5</button>\n        {/* <button onClick={() => dispatch(incrementByAmount(5))}>+5</button> */}\n      </Row>\n    </div>\n  );\n}\n\nexport default connector(Login);\n// export default Login;\n"]},"metadata":{},"sourceType":"module"}